
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(spacyr)
> 
> packs = c('data.table','tm','quanteda','textclean','stringr','pbapply','parallel','doParallel','textreuse')
> need = packs[!packs %in% installed.packages()[,'Package']]
> lapply(need,install.packages)
list()
> lapply(packs,require,character.only = T)
Loading required package: data.table
Loading required package: tm
Loading required package: NLP
Loading required package: quanteda
Package version: 2.1.2
Parallel computing: 2 of 8 threads used.
See https://quanteda.io for tutorials and examples.

Attaching package: ‘quanteda’

The following objects are masked from ‘package:tm’:

    as.DocumentTermMatrix, stopwords

The following objects are masked from ‘package:NLP’:

    meta, meta<-

The following object is masked from ‘package:utils’:

    View

Loading required package: textclean
Loading required package: stringr
Loading required package: pbapply
Loading required package: parallel
Loading required package: doParallel
Loading required package: foreach
Loading required package: iterators
Loading required package: textreuse

Attaching package: ‘textreuse’

The following objects are masked from ‘package:quanteda’:

    meta, meta<-, tokens

[[1]]
[1] TRUE

[[2]]
[1] TRUE

[[3]]
[1] TRUE

[[4]]
[1] TRUE

[[5]]
[1] TRUE

[[6]]
[1] TRUE

[[7]]
[1] TRUE

[[8]]
[1] TRUE

[[9]]
[1] TRUE

> 
> 
> minhash <- minhash_generator(n = 240, seed = 40)
> progress_bars = T
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells 1993969 106.5    3976560 212.4         NA  2586328 138.2
Vcells 3340562  25.5    8388608  64.0      32768  4890137  37.4
> 
> rerun_existing = F
> 
> mcores = detectCores() / 2
> options("mc.cores" = detectCores() /2)
> 
> 
> cluster = makeCluster(mcores)
> registerDoParallel(cl = cluster,cores = mcores)
> parallel::clusterEvalQ(cluster,'require(data.table)')
[[1]]
[1] "require(data.table)"

[[2]]
[1] "require(data.table)"

[[3]]
[1] "require(data.table)"

[[4]]
[1] "require(data.table)"

> 
> dir.create('scratch/climate_in_nepa/eis_year_tests/')
Warning message:
In dir.create("scratch/climate_in_nepa/eis_year_tests/") :
  'scratch/climate_in_nepa/eis_year_tests' already exists
> scratch_loc = 'scratch/climate_in_nepa/eis_year_tests/'
> #######
> for(year in 2013:2020){
+ hash_file = paste0(scratch_loc,paste0('eis_',year,'.RDS'))
+ if(rerun_existing|!file.exists(hash_file)){
+   tlist = readRDS('scratch/climate_in_nepa/climate_segments/temp_segments_',year,'.rds')
+   ids = str_extract(names(tlist),'^[0-9]{8}')
+   text_set = unlist(tlist)
+   keep = which(nchar(text_set)>=750)
+   
+   corpus =   TextReuseCorpus(text = text_set,
+                                  meta = list(Project_File = names(text_set),PROJECT_ID = str_remove(names(text_set),'_.*')),
+                                  tokenizer = tokenize_ngrams, n = 10,
+                                  minhash_func = minhash, keep_tokens = TRUE,
+                                  progress = progress_bars,skip_short = T)
+   #eis_flist = flist[gsub('--','',str_extract(flist,'--.+\\.(PDF|pdf)')) %in% documents$FILE_NAME[documents$PROJECT_TYPE=='EIS']]
+   #floc = 'input/filtered_text_files/'
+   buckets <- lsh(corpus, bands = 40, progress = progress_bars)
+   segment_candidates <- lsh_candidates(buckets)
+   #eis_candidates$a = text_names[keep][as.numeric(str_extract(eis_candidates$a,'[0-9]{1,}'))]
+   #eis_candidates$b = text_names[keep][as.numeric(str_extract(eis_candidates$b,'[0-9]{1,}'))]
+   saveRDS(segment_candidates,hash_file)
+ }
+ }
Error in readRDS("scratch/climate_in_nepa/climate_segments/temp_segments_",  : 
  unused argument (".rds")
Execution halted
